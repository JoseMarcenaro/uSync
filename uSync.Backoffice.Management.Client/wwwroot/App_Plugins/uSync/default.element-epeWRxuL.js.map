{"version":3,"file":"default.element-epeWRxuL.js","sources":["../../../assets/src/shared/action-box.ts","../../../assets/src/workspace/views/default/default.element.ts"],"sourcesContent":["import { LitElement, customElement, html, css, property } from \"@umbraco-cms/backoffice/external/lit\";\r\nimport { SyncActionButton, SyncActionGroup } from \"../api\";\r\n\r\n/**\r\n * @exports\r\n * @class uSyncActionBox\r\n */\r\n\r\n@customElement('usync-action-box')\r\nexport class uSyncActionBox extends LitElement {\r\n\r\n\r\n    @property({ type: String })\r\n    myName = ''; \r\n\r\n    /**\r\n     * @type: {uSyncActionGroup}\r\n     * @memberof uSyncActionBox\r\n     * @description collection of buttons to display.\r\n     */\r\n    @property({ type: Object })\r\n    group! : SyncActionGroup ;\r\n   \r\n\r\n    private _handleClick(groupKey: string | undefined, button: SyncActionButton) {\r\n        this.dispatchEvent(new CustomEvent('perform-action', {\r\n            detail: {\r\n                group: groupKey,\r\n                key: button.key\r\n            }\r\n        }));\r\n    }\r\n\r\n    render() {\r\n\r\n        const groupKey = this.group?.key;\r\n\r\n        const buttons = this.group?.buttons.map((i) => {\r\n            return html`\r\n                <uui-button label=${i.key} \r\n                    color=${i.color}\r\n                    look=${i.look}\r\n                    style=\"font-size: 20px\"\r\n                    @click=${() => this._handleClick(groupKey, i)}\r\n                    ></uui-button>\r\n            `;\r\n        });\r\n\r\n        return html`\r\n                <uui-box class='action-box'>\r\n\r\n                    <div class=\"box-content\">\r\n\r\n                        <h2 class=\"box-heading\">${this.group?.groupName}</h2>\r\n\r\n                        <uui-icon name=${this.group?.icon}></uui-icon>\r\n                    \r\n                        <div class=\"box-buttons\">\r\n                            ${buttons}\r\n                        </div>\r\n                        \r\n                    </div>\r\n                </uui-box>\r\n        `;\r\n    }\r\n\r\n\r\n    static styles = css`\r\n\r\n        .box-content {\r\n            display: flex;\r\n            flex-direction: column;\r\n            align-items: center;\r\n        }\r\n\r\n        .box-heading {\r\n            font-size: 20pt;\r\n        }\r\n\r\n        uui-icon {\r\n            margin: 20px;\r\n            font-size: 40pt;\r\n        }\r\n\r\n        uui-button {\r\n            margin: 0 5px;\r\n        }\r\n\r\n        .box-buttons {\r\n            margin-top: 10px;\r\n        }\r\n        `;\r\n}\r\n\r\nexport default uSyncActionBox;\r\n\r\n\r\n","import { UmbElementMixin } from \"@umbraco-cms/backoffice/element-api\"\r\nimport { LitElement, css, customElement, html, property } from \"@umbraco-cms/backoffice/external/lit\";\r\n\r\nimport { USYNC_ACTION_CONTEXT_TOKEN, uSyncWorkspaceActionContext } from '../../context/action.context.js';\r\n\r\nimport \"../../../shared/action-box.js\";\r\nimport { SyncActionGroup } from \"../../../api/index.js\";\r\n\r\n@customElement('usync-default-view')\r\nexport class uSyncDefaultViewElement extends UmbElementMixin(LitElement) {\r\n\r\n    #actionContext? : uSyncWorkspaceActionContext;\r\n\r\n    @property({ type: Array })\r\n    actions?: Array<SyncActionGroup>\r\n\r\n    @property({ type: Boolean })\r\n    loaded: Boolean = false;\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this.consumeContext(USYNC_ACTION_CONTEXT_TOKEN, (_instance) => {\r\n\r\n            console.log('consume context');\r\n\r\n            this.#actionContext = _instance;\r\n\r\n            this.observe(_instance.actions, (_actions) => {\r\n                console.log('actions', _actions);\r\n                this.actions = _actions;\r\n\r\n                this.loaded = this.actions !== null;\r\n            });\r\n\r\n            _instance.getActions();\r\n\r\n            // _instance.getTime();\r\n        });\r\n    }\r\n\r\n\r\n    /**\r\n     * \r\n     * @param event \r\n     */\r\n    performAction(event: CustomEventInit) {\r\n        this.#actionContext?.performAction(event.detail.group, event.detail.key);\r\n    }\r\n\r\n    render() {\r\n\r\n        if (this.loaded == false) {\r\n            return html`<uui-loader></uui-loader>`;\r\n        }\r\n        else {\r\n\r\n            console.log(this.actions?.length);\r\n\r\n            var actions = this.actions?.map((group) => {\r\n                return html`\r\n                <usync-action-box myName=\"fred\"\r\n                    .group=\"${group}\"\r\n                    @perform-action=${this.performAction}>\r\n                </usync-action-box>\r\n            `;\r\n            })\r\n\r\n            return html`\r\n                <div class=\"action-buttons-box\">\r\n                    ${actions}\r\n                </div>\r\n            `;\r\n        }\r\n    };\r\n\r\n    static styles = [\r\n        css`\r\n            usync-action-box {\r\n               margin: var(--uui-size-layout-1);\r\n            }\r\n\r\n            .action-buttons-box {\r\n               margin: var(--uui-size-layout-1);\r\n               display: grid;\r\n               grid-template-columns: 1fr 1fr 1fr;\r\n            }        \r\n        `\r\n    ]\r\n}\r\n\r\nexport default uSyncDefaultViewElement;\r\n\r\ndeclare global {\r\n    interface HTMLElementTagNameMap {\r\n        'usync-default-view': uSyncDefaultViewElement\r\n    }\r\n}"],"names":["uSyncActionBox","LitElement","groupKey","button","_a","buttons","_b","i","html","_c","_d","css","__decorateClass","property","customElement","_actionContext","uSyncDefaultViewElement","UmbElementMixin","__privateAdd","USYNC_ACTION_CONTEXT_TOKEN","_instance","__privateSet","_actions","event","__privateGet","actions","group","uSyncDefaultViewElement$1"],"mappings":"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"}