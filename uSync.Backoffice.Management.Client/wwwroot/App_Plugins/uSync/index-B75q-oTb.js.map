{"version":3,"file":"index-B75q-oTb.js","sources":["../../../assets/src/api/core/ApiError.ts","../../../assets/src/api/core/CancelablePromise.ts","../../../assets/src/api/core/OpenAPI.ts","../../../assets/src/api/core/request.ts","../../../assets/src/api/services/ActionsResource.ts","../../../assets/src/repository/sources/SyncAction.source.ts","../../../assets/src/repository/SyncAction.respositoy.ts","../../../assets/src/constants.ts","../../../assets/src/tree/manifest.ts","../../../assets/src/workspace/manifest.ts","../../../assets/src/components/usync-action-box.ts","../../../assets/src/components/usync-progress-box.ts","../../../assets/src/index.ts"],"sourcesContent":["/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { ApiRequestOptions } from './ApiRequestOptions';\nimport type { ApiResult } from './ApiResult';\n\nexport class ApiError extends Error {\n    public readonly url: string;\n    public readonly status: number;\n    public readonly statusText: string;\n    public readonly body: any;\n    public readonly request: ApiRequestOptions;\n\n    constructor(request: ApiRequestOptions, response: ApiResult, message: string) {\n        super(message);\n\n        this.name = 'ApiError';\n        this.url = response.url;\n        this.status = response.status;\n        this.statusText = response.statusText;\n        this.body = response.body;\n        this.request = request;\n    }\n}\r\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nexport class CancelError extends Error {\n\n    constructor(message: string) {\n        super(message);\n        this.name = 'CancelError';\n    }\n\n    public get isCancelled(): boolean {\n        return true;\n    }\n}\n\nexport interface OnCancel {\n    readonly isResolved: boolean;\n    readonly isRejected: boolean;\n    readonly isCancelled: boolean;\n\n    (cancelHandler: () => void): void;\n}\n\nexport class CancelablePromise<T> implements Promise<T> {\n    #isResolved: boolean;\n    #isRejected: boolean;\n    #isCancelled: boolean;\n    readonly #cancelHandlers: (() => void)[];\n    readonly #promise: Promise<T>;\n    #resolve?: (value: T | PromiseLike<T>) => void;\n    #reject?: (reason?: any) => void;\n\n    constructor(\n        executor: (\n            resolve: (value: T | PromiseLike<T>) => void,\n            reject: (reason?: any) => void,\n            onCancel: OnCancel\n        ) => void\n    ) {\n        this.#isResolved = false;\n        this.#isRejected = false;\n        this.#isCancelled = false;\n        this.#cancelHandlers = [];\n        this.#promise = new Promise<T>((resolve, reject) => {\n            this.#resolve = resolve;\n            this.#reject = reject;\n\n            const onResolve = (value: T | PromiseLike<T>): void => {\n                if (this.#isResolved || this.#isRejected || this.#isCancelled) {\n                    return;\n                }\n                this.#isResolved = true;\n                this.#resolve?.(value);\n            };\n\n            const onReject = (reason?: any): void => {\n                if (this.#isResolved || this.#isRejected || this.#isCancelled) {\n                    return;\n                }\n                this.#isRejected = true;\n                this.#reject?.(reason);\n            };\n\n            const onCancel = (cancelHandler: () => void): void => {\n                if (this.#isResolved || this.#isRejected || this.#isCancelled) {\n                    return;\n                }\n                this.#cancelHandlers.push(cancelHandler);\n            };\n\n            Object.defineProperty(onCancel, 'isResolved', {\n                get: (): boolean => this.#isResolved,\n            });\n\n            Object.defineProperty(onCancel, 'isRejected', {\n                get: (): boolean => this.#isRejected,\n            });\n\n            Object.defineProperty(onCancel, 'isCancelled', {\n                get: (): boolean => this.#isCancelled,\n            });\n\n            return executor(onResolve, onReject, onCancel as OnCancel);\n        });\n    }\n\n     get [Symbol.toStringTag]() {\n            return \"Cancellable Promise\";\n     }\n\n    public then<TResult1 = T, TResult2 = never>(\n        onFulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | null,\n        onRejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | null\n    ): Promise<TResult1 | TResult2> {\n        return this.#promise.then(onFulfilled, onRejected);\n    }\n\n    public catch<TResult = never>(\n        onRejected?: ((reason: any) => TResult | PromiseLike<TResult>) | null\n    ): Promise<T | TResult> {\n        return this.#promise.catch(onRejected);\n    }\n\n    public finally(onFinally?: (() => void) | null): Promise<T> {\n        return this.#promise.finally(onFinally);\n    }\n\n    public cancel(): void {\n        if (this.#isResolved || this.#isRejected || this.#isCancelled) {\n            return;\n        }\n        this.#isCancelled = true;\n        if (this.#cancelHandlers.length) {\n            try {\n                for (const cancelHandler of this.#cancelHandlers) {\n                    cancelHandler();\n                }\n            } catch (error) {\n                console.warn('Cancellation threw an error', error);\n                return;\n            }\n        }\n        this.#cancelHandlers.length = 0;\n        this.#reject?.(new CancelError('Request aborted'));\n    }\n\n    public get isCancelled(): boolean {\n        return this.#isCancelled;\n    }\n}\r\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { ApiRequestOptions } from './ApiRequestOptions';\n\ntype Resolver<T> = (options: ApiRequestOptions) => Promise<T>;\ntype Headers = Record<string, string>;\n\nexport type OpenAPIConfig = {\n    BASE: string;\n    VERSION: string;\n    WITH_CREDENTIALS: boolean;\n    CREDENTIALS: 'include' | 'omit' | 'same-origin';\n    TOKEN?: string | Resolver<string> | undefined;\n    USERNAME?: string | Resolver<string> | undefined;\n    PASSWORD?: string | Resolver<string> | undefined;\n    HEADERS?: Headers | Resolver<Headers> | undefined;\n    ENCODE_PATH?: ((path: string) => string) | undefined;\n};\n\nexport const OpenAPI: OpenAPIConfig = {\n    BASE: '',\n    VERSION: 'Latest',\n    WITH_CREDENTIALS: false,\n    CREDENTIALS: 'include',\n    TOKEN: undefined,\n    USERNAME: undefined,\n    PASSWORD: undefined,\n    HEADERS: undefined,\n    ENCODE_PATH: undefined,\n};\r\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport { ApiError } from './ApiError';\nimport type { ApiRequestOptions } from './ApiRequestOptions';\nimport type { ApiResult } from './ApiResult';\nimport { CancelablePromise } from './CancelablePromise';\nimport type { OnCancel } from './CancelablePromise';\nimport type { OpenAPIConfig } from './OpenAPI';\n\nexport const isDefined = <T>(value: T | null | undefined): value is Exclude<T, null | undefined> => {\n    return value !== undefined && value !== null;\n};\n\nexport const isString = (value: any): value is string => {\n    return typeof value === 'string';\n};\n\nexport const isStringWithValue = (value: any): value is string => {\n    return isString(value) && value !== '';\n};\n\nexport const isBlob = (value: any): value is Blob => {\n    return (\n        typeof value === 'object' &&\n        typeof value.type === 'string' &&\n        typeof value.stream === 'function' &&\n        typeof value.arrayBuffer === 'function' &&\n        typeof value.constructor === 'function' &&\n        typeof value.constructor.name === 'string' &&\n        /^(Blob|File)$/.test(value.constructor.name) &&\n        /^(Blob|File)$/.test(value[Symbol.toStringTag])\n    );\n};\n\nexport const isFormData = (value: any): value is FormData => {\n    return value instanceof FormData;\n};\n\nexport const base64 = (str: string): string => {\n    try {\n        return btoa(str);\n    } catch (err) {\n        // @ts-ignore\n        return Buffer.from(str).toString('base64');\n    }\n};\n\nexport const getQueryString = (params: Record<string, any>): string => {\n    const qs: string[] = [];\n\n    const append = (key: string, value: any) => {\n        qs.push(`${encodeURIComponent(key)}=${encodeURIComponent(String(value))}`);\n    };\n\n    const process = (key: string, value: any) => {\n        if (isDefined(value)) {\n            if (Array.isArray(value)) {\n                value.forEach(v => {\n                    process(key, v);\n                });\n            } else if (typeof value === 'object') {\n                Object.entries(value).forEach(([k, v]) => {\n                    process(`${key}[${k}]`, v);\n                });\n            } else {\n                append(key, value);\n            }\n        }\n    };\n\n    Object.entries(params).forEach(([key, value]) => {\n        process(key, value);\n    });\n\n    if (qs.length > 0) {\n        return `?${qs.join('&')}`;\n    }\n\n    return '';\n};\n\nconst getUrl = (config: OpenAPIConfig, options: ApiRequestOptions): string => {\n    const encoder = config.ENCODE_PATH || encodeURI;\n\n    const path = options.url\n        .replace('{api-version}', config.VERSION)\n        .replace(/{(.*?)}/g, (substring: string, group: string) => {\n            if (options.path?.hasOwnProperty(group)) {\n                return encoder(String(options.path[group]));\n            }\n            return substring;\n        });\n\n    const url = `${config.BASE}${path}`;\n    if (options.query) {\n        return `${url}${getQueryString(options.query)}`;\n    }\n    return url;\n};\n\nexport const getFormData = (options: ApiRequestOptions): FormData | undefined => {\n    if (options.formData) {\n        const formData = new FormData();\n\n        const process = (key: string, value: any) => {\n            if (isString(value) || isBlob(value)) {\n                formData.append(key, value);\n            } else {\n                formData.append(key, JSON.stringify(value));\n            }\n        };\n\n        Object.entries(options.formData)\n            .filter(([_, value]) => isDefined(value))\n            .forEach(([key, value]) => {\n                if (Array.isArray(value)) {\n                    value.forEach(v => process(key, v));\n                } else {\n                    process(key, value);\n                }\n            });\n\n        return formData;\n    }\n    return undefined;\n};\n\ntype Resolver<T> = (options: ApiRequestOptions) => Promise<T>;\n\nexport const resolve = async <T>(options: ApiRequestOptions, resolver?: T | Resolver<T>): Promise<T | undefined> => {\n    if (typeof resolver === 'function') {\n        return (resolver as Resolver<T>)(options);\n    }\n    return resolver;\n};\n\nexport const getHeaders = async (config: OpenAPIConfig, options: ApiRequestOptions): Promise<Headers> => {\n    const token = await resolve(options, config.TOKEN);\n    const username = await resolve(options, config.USERNAME);\n    const password = await resolve(options, config.PASSWORD);\n    const additionalHeaders = await resolve(options, config.HEADERS);\n\n    const headers = Object.entries({\n        Accept: 'application/json',\n        ...additionalHeaders,\n        ...options.headers,\n    })\n        .filter(([_, value]) => isDefined(value))\n        .reduce((headers, [key, value]) => ({\n            ...headers,\n            [key]: String(value),\n        }), {} as Record<string, string>);\n\n    if (isStringWithValue(token)) {\n        headers['Authorization'] = `Bearer ${token}`;\n    }\n\n    if (isStringWithValue(username) && isStringWithValue(password)) {\n        const credentials = base64(`${username}:${password}`);\n        headers['Authorization'] = `Basic ${credentials}`;\n    }\n\n    if (options.body) {\n        if (options.mediaType) {\n            headers['Content-Type'] = options.mediaType;\n        } else if (isBlob(options.body)) {\n            headers['Content-Type'] = options.body.type || 'application/octet-stream';\n        } else if (isString(options.body)) {\n            headers['Content-Type'] = 'text/plain';\n        } else if (!isFormData(options.body)) {\n            headers['Content-Type'] = 'application/json';\n        }\n    }\n\n    return new Headers(headers);\n};\n\nexport const getRequestBody = (options: ApiRequestOptions): any => {\n    if (options.body !== undefined) {\n        if (options.mediaType?.includes('/json')) {\n            return JSON.stringify(options.body)\n        } else if (isString(options.body) || isBlob(options.body) || isFormData(options.body)) {\n            return options.body;\n        } else {\n            return JSON.stringify(options.body);\n        }\n    }\n    return undefined;\n};\n\nexport const sendRequest = async (\n    config: OpenAPIConfig,\n    options: ApiRequestOptions,\n    url: string,\n    body: any,\n    formData: FormData | undefined,\n    headers: Headers,\n    onCancel: OnCancel\n): Promise<Response> => {\n    const controller = new AbortController();\n\n    const request: RequestInit = {\n        headers,\n        body: body ?? formData,\n        method: options.method,\n        signal: controller.signal,\n    };\n\n    if (config.WITH_CREDENTIALS) {\n        request.credentials = config.CREDENTIALS;\n    }\n\n    onCancel(() => controller.abort());\n\n    return await fetch(url, request);\n};\n\nexport const getResponseHeader = (response: Response, responseHeader?: string): string | undefined => {\n    if (responseHeader) {\n        const content = response.headers.get(responseHeader);\n        if (isString(content)) {\n            return content;\n        }\n    }\n    return undefined;\n};\n\nexport const getResponseBody = async (response: Response): Promise<any> => {\n    if (response.status !== 204) {\n        try {\n            const contentType = response.headers.get('Content-Type');\n            if (contentType) {\n                const jsonTypes = ['application/json', 'application/problem+json']\n                const isJSON = jsonTypes.some(type => contentType.toLowerCase().startsWith(type));\n                if (isJSON) {\n                    return await response.json();\n                } else {\n                    return await response.text();\n                }\n            }\n        } catch (error) {\n            console.error(error);\n        }\n    }\n    return undefined;\n};\n\nexport const catchErrorCodes = (options: ApiRequestOptions, result: ApiResult): void => {\n    const errors: Record<number, string> = {\n        400: 'Bad Request',\n        401: 'Unauthorized',\n        403: 'Forbidden',\n        404: 'Not Found',\n        500: 'Internal Server Error',\n        502: 'Bad Gateway',\n        503: 'Service Unavailable',\n        ...options.errors,\n    }\n\n    const error = errors[result.status];\n    if (error) {\n        throw new ApiError(options, result, error);\n    }\n\n    if (!result.ok) {\n        const errorStatus = result.status ?? 'unknown';\n        const errorStatusText = result.statusText ?? 'unknown';\n        const errorBody = (() => {\n            try {\n                return JSON.stringify(result.body, null, 2);\n            } catch (e) {\n                return undefined;\n            }\n        })();\n\n        throw new ApiError(options, result,\n            `Generic Error: status: ${errorStatus}; status text: ${errorStatusText}; body: ${errorBody}`\n        );\n    }\n};\n\n/**\n * Request method\n * @param config The OpenAPI configuration object\n * @param options The request options from the service\n * @returns CancelablePromise<T>\n * @throws ApiError\n */\nexport const request = <T>(config: OpenAPIConfig, options: ApiRequestOptions): CancelablePromise<T> => {\n    return new CancelablePromise(async (resolve, reject, onCancel) => {\n        try {\n            const url = getUrl(config, options);\n            const formData = getFormData(options);\n            const body = getRequestBody(options);\n            const headers = await getHeaders(config, options);\n\n            if (!onCancel.isCancelled) {\n                const response = await sendRequest(config, options, url, body, formData, headers, onCancel);\n                const responseBody = await getResponseBody(response);\n                const responseHeader = getResponseHeader(response, options.responseHeader);\n\n                const result: ApiResult = {\n                    url,\n                    ok: response.ok,\n                    status: response.status,\n                    statusText: response.statusText,\n                    body: responseHeader ?? responseBody,\n                };\n\n                catchErrorCodes(options, result);\n\n                resolve(result.body);\n            }\n        } catch (error) {\n            reject(error);\n        }\n    });\n};\r\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { PerformActionRequestModel } from '../models/PerformActionRequestModel';\nimport type { PerformActionResponse } from '../models/PerformActionResponse';\nimport type { SyncActionGroup } from '../models/SyncActionGroup';\n\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport { OpenAPI } from '../core/OpenAPI';\nimport { request as __request } from '../core/request';\n\nexport class ActionsResource {\n\n    /**\n     * @returns any Success\n     * @throws ApiError\n     */\n    public static getActions(): CancelablePromise<Array<SyncActionGroup>> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/usync/api/v1/core/actions',\n        });\n    }\n\n    /**\n     * @returns any Success\n     * @throws ApiError\n     */\n    public static performAction({\nrequestBody,\n}: {\nrequestBody?: PerformActionRequestModel,\n}): CancelablePromise<PerformActionResponse> {\n        return __request(OpenAPI, {\n            method: 'POST',\n            url: '/umbraco/usync/api/v1/core/Perform',\n            body: requestBody,\n            mediaType: 'application/json',\n        });\n    }\n\n    /**\n     * @returns string Success\n     * @throws ApiError\n     */\n    public static getTime(): CancelablePromise<string> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/usync/api/v1/core/time',\n        });\n    }\n\n}\r\n","import { UmbControllerHost } from \"@umbraco-cms/backoffice/controller-api\";\r\nimport { DataSourceResponse } from \"@umbraco-cms/backoffice/repository\";\r\nimport { tryExecuteAndNotify } from '@umbraco-cms/backoffice/resources';\r\nimport { ActionsResource, PerformActionRequestModel, PerformActionResponse, SyncActionGroup } from \"../../api\";\r\n\r\n\r\nexport interface SyncActionDataSource {\r\n    getActions() : Promise<DataSourceResponse<unknown>>;\r\n}\r\n\r\nexport class uSyncActionDataSource implements SyncActionDataSource {\r\n\r\n    #host: UmbControllerHost;\r\n\r\n    constructor(host: UmbControllerHost) {\r\n        this.#host = host;\r\n    }\r\n\r\n    async getActions(): Promise<DataSourceResponse<Array<SyncActionGroup>>> {\r\n        return await tryExecuteAndNotify(this.#host, ActionsResource.getActions());\r\n    }\r\n\r\n    async getTime(): Promise<DataSourceResponse<string>> {\r\n        return await tryExecuteAndNotify(this.#host, ActionsResource.getTime());\r\n    }\r\n\r\n    async performAction(request : PerformActionRequestModel): Promise<DataSourceResponse<PerformActionResponse>> {\r\n        return await tryExecuteAndNotify(this.#host, ActionsResource.performAction({\r\n            requestBody: request\r\n        }));\r\n    }\r\n}\r\n\r\n\r\n\r\n","import { UmbControllerHost } from \"@umbraco-cms/backoffice/controller-api\";\r\nimport { uSyncActionDataSource } from \"./sources/SyncAction.source\";\r\nimport { UmbBaseController } from \"@umbraco-cms/backoffice/class-api\";\r\n\r\nexport class uSyncActionRepository extends UmbBaseController {\r\n    #actionDataSource: uSyncActionDataSource;\r\n\r\n    constructor(host: UmbControllerHost) {\r\n        super(host);\r\n        this.#actionDataSource = new uSyncActionDataSource(this);\r\n    }\r\n\r\n    async getActions() {\r\n        return this.#actionDataSource.getActions();\r\n    }\r\n\r\n    async getTime() {\r\n        return this.#actionDataSource.getTime();\r\n    }\r\n\r\n    async performAction(id: string, group: string, action: string, step: number) {\r\n\r\n        return this.#actionDataSource.performAction({\r\n            requestId: id,\r\n            groupName: group,\r\n            actionName: action,\r\n            stepNumber: step\r\n        });\r\n\r\n    }\r\n}","\r\nconst _constants = {\r\n\r\n    name: 'uSync',\r\n    path: 'usync',\r\n    icon: 'icon-infinity',\r\n    menuName: 'Syncronisation',\r\n\r\n    workspace: {\r\n        alias: 'usync.workspace',\r\n        name: 'uSync root workspace',\r\n        rootElement: 'usync-root',\r\n        elementName: 'usync-workspace-root',\r\n        contextAlias: 'usync.workspace.context',\r\n\r\n        defaultView: {\r\n            alias: 'usync.workspace.default',\r\n            name: 'uSync workspace default view',\r\n            icon: 'icon-infinity',\r\n            path: 'usync.workspace.default'\r\n        },\r\n\r\n        settingView: {\r\n            alias: 'usync.workspace.settings',\r\n            name: 'uSync workspace settings view',\r\n            icon: 'icon-settings',\r\n            path: 'usync.workspace.settings'\r\n        }\r\n    },\r\n\r\n    dashboard: {\r\n        name: 'uSyncDashboard',\r\n        alias: 'usync.dashboard',\r\n        elementName: 'usync-dashboard',\r\n        path: 'usync.dashboard',\r\n        weight: -10,\r\n        section: 'Umb.Section.Settings',\r\n    },\r\n\r\n    tree : {\r\n        name: 'uSyncTree',\r\n        alias: 'usync.tree',\r\n        respository: ''\r\n    },\r\n\r\n    menu : {\r\n        sidebar: 'usync.sidebar',\r\n        alias: 'usync.menu',\r\n        name: 'usync.Menu',\r\n        label: 'Syncronisation',\r\n\r\n        item: {\r\n            alias: 'usync.menu.item',\r\n            name: 'usync.menu.item'\r\n        }\r\n    }\r\n\r\n};\r\n\r\n\r\nexport const uSyncConstants = _constants;","import { ManifestMenu, ManifestMenuItem, ManifestTree, ManifestTypes } from \"@umbraco-cms/backoffice/extension-registry\";\r\nimport { uSyncConstants } from \"../constants\";\r\n\r\nconst sectionAlias = 'Umb.Section.Settings';\r\n\r\nconst menu : ManifestMenu = {\r\n    type: 'menu',\r\n    alias: uSyncConstants.menu.alias,\r\n    name: uSyncConstants.menu.name,\r\n    meta: {\r\n        label: uSyncConstants.menu.label\r\n    }\r\n}\r\n\r\nconst menuSidebarApp: ManifestTypes = {\r\n    type: 'sectionSidebarApp',\r\n    kind: 'menu',\r\n    alias: uSyncConstants.menu.sidebar,\r\n    name: 'uSync section sidebar menu',\r\n    weight: 150,\r\n    meta: {\r\n        label: uSyncConstants.menu.label,\r\n        menu: uSyncConstants.menu.alias,\r\n    },\r\n    conditions: [\r\n        {\r\n            alias: 'Umb.Condition.SectionAlias',\r\n            match: sectionAlias,\r\n        }\r\n    ],\r\n}\r\n\r\nconst tree : ManifestTree = {\r\n    type: \"tree\",\r\n    alias: uSyncConstants.tree.alias,\r\n    name: uSyncConstants.tree.name,\r\n    meta: {\r\n        repositoryAlias: uSyncConstants.tree.respository\r\n    }\r\n};\r\n\r\nconst menuItem : ManifestMenuItem = {\r\n    type: \"menuItem\",\r\n    alias: uSyncConstants.menu.item.alias,\r\n    name: uSyncConstants.menu.item.name,\r\n    meta: {\r\n        label: uSyncConstants.name,\r\n        icon: uSyncConstants.icon,\r\n        entityType: uSyncConstants.workspace.rootElement,\r\n        menus: [uSyncConstants.menu.alias]\r\n    }\r\n}\r\n\r\nexport const manifests = [menu, menuSidebarApp, menuItem, tree];","import { \r\n    ManifestWorkspace, \r\n    ManifestWorkspaceAction, \r\n    ManifestWorkspaceContext, \r\n    ManifestWorkspaceView \r\n} from \"@umbraco-cms/backoffice/extension-registry\";\r\nimport { uSyncConstants } from \"../constants.js\";\r\n\r\nconst workspaceAlias = uSyncConstants.workspace.alias;\r\n\r\nconst context: ManifestWorkspaceContext = {\r\n    type: 'workspaceContext',\r\n    alias: uSyncConstants.workspace.contextAlias,\r\n    name: 'uSync workspace context',\r\n    js: () => import('./workspace.context.js'),\r\n}\r\n\r\n\r\nconst workspace: ManifestWorkspace = {\r\n    type: 'workspace',\r\n    alias: workspaceAlias,\r\n    name: uSyncConstants.workspace.name,\r\n    js: () => import('./workspace.element.js'),\r\n    meta: {\r\n        entityType: uSyncConstants.workspace.rootElement,\r\n    }\r\n};\r\n\r\n/**\r\n * this isn't working, don't know why :( - going to go hardwired for now\r\n */\r\nconst workspaceViews: Array<ManifestWorkspaceView> = [\r\n    {\r\n        type: 'workspaceView',\r\n        alias: uSyncConstants.workspace.defaultView.alias,\r\n        name: uSyncConstants.workspace.defaultView.name,\r\n        js: () => import('./views/default/default.element.js'),\r\n        weight: 300,\r\n        meta: {\r\n            label: 'Default',\r\n            pathname: 'default',\r\n            icon: 'icon-box',\r\n        },\r\n        conditions: [\r\n            {\r\n\t\t\t\talias: 'Umb.Condition.WorkspaceAlias',\r\n                match: workspaceAlias\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        type: 'workspaceView',\r\n        alias: uSyncConstants.workspace.settingView.alias,\r\n        name: uSyncConstants.workspace.settingView.name,\r\n        js: () => import('./views/settings/settings.element.js'),\r\n        weight: 200,\r\n        meta: {\r\n            label: 'Settings',\r\n            pathname: 'settings',\r\n            icon: 'icon-box'\r\n        },\r\n        conditions: [\r\n            {\r\n\t\t\t\talias: 'Umb.Condition.WorkspaceAlias',\r\n                match: workspaceAlias,\r\n            }\r\n        ]       \r\n    }\r\n];\r\n\r\nconst workspaceActions: Array<ManifestWorkspaceAction> = [];\r\n\r\nexport const manifests = [context, workspace, ...workspaceViews, ...workspaceActions];","import { LitElement, customElement, html, css, property } from \"@umbraco-cms/backoffice/external/lit\";\r\nimport { SyncActionButton, SyncActionGroup } from \"../api\";\r\n\r\n/**\r\n * @exports\r\n * @class uSyncActionBox\r\n */\r\n\r\n@customElement('usync-action-box')\r\nexport class uSyncActionBox extends LitElement {\r\n\r\n\r\n    @property({ type: String })\r\n    myName = ''; \r\n\r\n    /**\r\n     * @type: {uSyncActionGroup}\r\n     * @memberof uSyncActionBox\r\n     * @description collection of buttons to display.\r\n     */\r\n    @property({ type: Object })\r\n    group! : SyncActionGroup ;\r\n   \r\n\r\n    private _handleClick(groupKey: string | undefined, button: SyncActionButton) {\r\n        this.dispatchEvent(new CustomEvent('perform-action', {\r\n            detail: {\r\n                group: groupKey,\r\n                key: button.key\r\n            }\r\n        }));\r\n    }\r\n\r\n    render() {\r\n\r\n        const groupKey = this.group?.key;\r\n\r\n        const buttons = this.group?.buttons.map((i) => {\r\n            return html`\r\n                <uui-button label=${i.key} \r\n                    color=${i.color}\r\n                    look=${i.look}\r\n                    style=\"font-size: 20px\"\r\n                    @click=${() => this._handleClick(groupKey, i)}\r\n                    ></uui-button>\r\n            `;\r\n        });\r\n\r\n        return html`\r\n                <uui-box class='action-box'>\r\n\r\n                    <div class=\"box-content\">\r\n\r\n                        <h2 class=\"box-heading\">${this.group?.groupName}</h2>\r\n\r\n                        <uui-icon name=${this.group?.icon}></uui-icon>\r\n                    \r\n                        <div class=\"box-buttons\">\r\n                            ${buttons}\r\n                        </div>\r\n                        \r\n                    </div>\r\n                </uui-box>\r\n        `;\r\n    }\r\n\r\n\r\n    static styles = css`\r\n\r\n        .box-content {\r\n            display: flex;\r\n            flex-direction: column;\r\n            align-items: center;\r\n        }\r\n\r\n        .box-heading {\r\n            font-size: 20pt;\r\n        }\r\n\r\n        uui-icon {\r\n            margin: 20px;\r\n            font-size: 40pt;\r\n        }\r\n\r\n        uui-button {\r\n            margin: 0 5px;\r\n        }\r\n\r\n        .box-buttons {\r\n            margin-top: 10px;\r\n        }\r\n        `;\r\n}\r\n\r\nexport default uSyncActionBox;\r\n\r\n\r\n","import { customElement, LitElement, css, html, property, nothing } from \"@umbraco-cms/backoffice/external/lit\";\r\nimport { ActionInfo } from \"../api\";\r\n\r\n/**\r\n * @class uSyncProcessBox\r\n * @description provides the progress box while things happen.\r\n */\r\n@customElement('usync-progress-box')\r\nexport class uSyncProcessBox extends LitElement {\r\n\r\n    @property({type: String})\r\n    title: string = \"\";\r\n\r\n    @property({type: Array})\r\n    actions? : Array<ActionInfo>;\r\n\r\n    render() {\r\n\r\n        console.log('progress box', this.actions?.length);\r\n\r\n        if (!this.actions) return nothing; \r\n\r\n        var actionHtml = this.actions?.map((action) => {\r\n\r\n            return html`\r\n                <div class=\"action \r\n                    ${action.completed ? 'complete' : ''} ${action.working ? \"working\" : ''}\">\r\n                    <uui-icon .name=${action.icon}></uui-icon>\r\n                    <h4>${action.actionName}</h4>\r\n                </div>\r\n            `;\r\n\r\n        });\r\n\r\n\r\n        return html`\r\n            <uui-box>\r\n                <h2>${this.title}</h2>\r\n                <div class=\"action-list\">\r\n                    ${actionHtml}\r\n                </div>\r\n            </uui-box>\r\n        `;\r\n    }\r\n    \r\n    static styles = css`\r\n        uui-box {\r\n            margin: var(--uui-size-layout-1);\r\n        }\r\n\r\n        h2 {\r\n            text-align: center;\r\n        }\r\n\r\n        .action-list {\r\n            display: flex;\r\n            justify-content: space-around;\r\n        }\r\n\r\n        .action {\r\n            display: flex;\r\n            flex-direction: column;\r\n            align-items: center;\r\n        }\r\n\r\n        .action uui-icon {\r\n            font-size: 30pt;\r\n        }\r\n        \r\n        .complete {\r\n            color: blue;\r\n            opacity: 0.5;\r\n        }\r\n\r\n        .working {\r\n            color: green;\r\n        }\r\n    `;\r\n\r\n}\r\n\r\nexport default uSyncProcessBox;","import { UmbEntryPointOnInit } from '@umbraco-cms/backoffice/extension-api';\r\n\r\nexport * from './repository/index.js';\r\n\r\n// load up the things here. \r\nimport { manifests as trees } from './tree/manifest';\r\nimport { manifests as workspace } from './workspace/manifest';\r\nimport { ManifestTypes } from '@umbraco-cms/backoffice/extension-registry';\r\n\r\nimport \"./components\";\r\n\r\nconst contexts: Array<ManifestTypes> = [\r\n    {\r\n        type: 'globalContext',\r\n        alias: 'uSync.GlobalContext.Actions',\r\n        name: 'uSync Action Context',\r\n        js: () => import('./workspace/workspace.context.js')\r\n        \r\n    }\r\n]\r\n\r\nexport const onInit: UmbEntryPointOnInit = (_host, extensionRegistry) => {\r\n    console.log(workspace);\r\n\r\n    // register them here. \r\n    extensionRegistry.registerMany(\r\n        [\r\n            ...contexts,\r\n            ...trees,\r\n            ...workspace\r\n        ]);\r\n};"],"names":["ApiError","request","response","message","CancelError","CancelablePromise","executor","__privateAdd","_isResolved","_isRejected","_isCancelled","_cancelHandlers","_promise","_resolve","_reject","__privateSet","resolve","reject","onResolve","value","__privateGet","_a","onReject","reason","onCancel","cancelHandler","onFulfilled","onRejected","onFinally","error","OpenAPI","isDefined","isString","isStringWithValue","isBlob","isFormData","base64","str","getQueryString","params","qs","append","key","process","v","k","getUrl","config","options","encoder","path","substring","group","url","getFormData","formData","_","resolver","getHeaders","token","username","password","additionalHeaders","headers","credentials","getRequestBody","sendRequest","body","controller","getResponseHeader","responseHeader","content","getResponseBody","contentType","type","catchErrorCodes","result","errorStatus","errorStatusText","errorBody","responseBody","ActionsResource","__request","requestBody","uSyncActionDataSource","host","_host","tryExecuteAndNotify","uSyncActionRepository","UmbBaseController","_actionDataSource","id","action","step","_constants","uSyncConstants","sectionAlias","menu","menuSidebarApp","tree","menuItem","manifests","workspaceAlias","context","workspace","workspaceViews","workspaceActions","uSyncActionBox","LitElement","groupKey","button","buttons","_b","i","html","_c","_d","css","__decorateClass","property","customElement","uSyncProcessBox","nothing","actionHtml","contexts","onInit","extensionRegistry","trees"],"mappings":";;;;;;;;;;;;AAOO,MAAMA,UAAiB,MAAM;AAAA,EAOhC,YAAYC,GAA4BC,GAAqBC,GAAiB;AAC1E,UAAMA,CAAO,GAEb,KAAK,OAAO,YACZ,KAAK,MAAMD,EAAS,KACpB,KAAK,SAASA,EAAS,QACvB,KAAK,aAAaA,EAAS,YAC3B,KAAK,OAAOA,EAAS,MACrB,KAAK,UAAUD;AAAA,EACnB;AACJ;ACpBO,MAAMG,UAAoB,MAAM;AAAA,EAEnC,YAAYD,GAAiB;AACzB,UAAMA,CAAO,GACb,KAAK,OAAO;AAAA,EAChB;AAAA,EAEA,IAAW,cAAuB;AACvB,WAAA;AAAA,EACX;AACJ;;AAUO,MAAME,EAA2C;AAAA,EASpD,YACIC,GAKF;AAdF,IAAAC,EAAA,MAAAC,GAAA;AACA,IAAAD,EAAA,MAAAE,GAAA;AACA,IAAAF,EAAA,MAAAG,GAAA;AACS,IAAAH,EAAA,MAAAI,GAAA;AACA,IAAAJ,EAAA,MAAAK,GAAA;AACT,IAAAL,EAAA,MAAAM,GAAA;AACA,IAAAN,EAAA,MAAAO,GAAA;AASI,IAAAC,EAAA,MAAKP,GAAc,KACnBO,EAAA,MAAKN,GAAc,KACnBM,EAAA,MAAKL,GAAe,KACpBK,EAAA,MAAKJ,GAAkB,KACvBI,EAAA,MAAKH,GAAW,IAAI,QAAW,CAACI,GAASC,MAAW;AAChD,MAAAF,EAAA,MAAKF,GAAWG,IAChBD,EAAA,MAAKD,GAAUG;AAET,YAAAC,IAAY,CAACC,MAAoC;;AACnD,QAAIC,EAAA,MAAKZ,MAAeY,EAAA,MAAKX,MAAeW,EAAA,MAAKV,OAGjDK,EAAA,MAAKP,GAAc,MACnBa,IAAAD,EAAA,MAAKP,OAAL,QAAAQ,EAAA,WAAgBF;AAAA,MAAK,GAGnBG,IAAW,CAACC,MAAuB;;AACrC,QAAIH,EAAA,MAAKZ,MAAeY,EAAA,MAAKX,MAAeW,EAAA,MAAKV,OAGjDK,EAAA,MAAKN,GAAc,MACnBY,IAAAD,EAAA,MAAKN,OAAL,QAAAO,EAAA,WAAeE;AAAA,MAAM,GAGnBC,IAAW,CAACC,MAAoC;AAClD,QAAIL,EAAA,MAAKZ,MAAeY,EAAA,MAAKX,MAAeW,EAAA,MAAKV,MAG5CU,EAAA,MAAAT,GAAgB,KAAKc,CAAa;AAAA,MAAA;AAGpC,oBAAA,eAAeD,GAAU,cAAc;AAAA,QAC1C,KAAK,MAAeJ,EAAA,MAAKZ;AAAA,MAAA,CAC5B,GAEM,OAAA,eAAegB,GAAU,cAAc;AAAA,QAC1C,KAAK,MAAeJ,EAAA,MAAKX;AAAA,MAAA,CAC5B,GAEM,OAAA,eAAee,GAAU,eAAe;AAAA,QAC3C,KAAK,MAAeJ,EAAA,MAAKV;AAAA,MAAA,CAC5B,GAEMJ,EAASY,GAAWI,GAAUE,CAAoB;AAAA,IAAA,CAC5D;AAAA,EACL;AAAA,EAEC,KAAK,OAAO,WAAW,IAAI;AACb,WAAA;AAAA,EACd;AAAA,EAEM,KACHE,GACAC,GAC4B;AAC5B,WAAOP,EAAA,MAAKR,GAAS,KAAKc,GAAaC,CAAU;AAAA,EACrD;AAAA,EAEO,MACHA,GACoB;AACb,WAAAP,EAAA,MAAKR,GAAS,MAAMe,CAAU;AAAA,EACzC;AAAA,EAEO,QAAQC,GAA6C;AACjD,WAAAR,EAAA,MAAKR,GAAS,QAAQgB,CAAS;AAAA,EAC1C;AAAA,EAEO,SAAe;;AAClB,QAAI,EAAAR,EAAA,MAAKZ,MAAeY,EAAA,MAAKX,MAAeW,EAAA,MAAKV,KAI7C;AAAA,UADJK,EAAA,MAAKL,GAAe,KAChBU,EAAA,MAAKT,GAAgB;AACjB,YAAA;AACW,qBAAAc,KAAiBL,EAAA,MAAKT;AACf,YAAAc;iBAEbI,GAAO;AACJ,kBAAA,KAAK,+BAA+BA,CAAK;AACjD;AAAA,QACJ;AAEJ,MAAAT,EAAA,MAAKT,GAAgB,SAAS,IAC9BU,IAAAD,EAAA,MAAKN,OAAL,QAAAO,EAAA,WAAe,IAAIjB,EAAY,iBAAiB;AAAA;AAAA,EACpD;AAAA,EAEA,IAAW,cAAuB;AAC9B,WAAOgB,EAAA,MAAKV;AAAA,EAChB;AACJ;AAzGIF,IAAA,eACAC,IAAA,eACAC,IAAA,eACSC,IAAA,eACAC,IAAA,eACTC,IAAA,eACAC,IAAA;ACVG,MAAMgB,IAAyB;AAAA,EAClC,MAAM;AAAA,EACN,SAAS;AAAA,EACT,kBAAkB;AAAA,EAClB,aAAa;AAAA,EACb,OAAO;AAAA,EACP,UAAU;AAAA,EACV,UAAU;AAAA,EACV,SAAS;AAAA,EACT,aAAa;AACjB,GCpBaC,IAAY,CAAIZ,MACKA,KAAU,MAG/Ba,IAAW,CAACb,MACd,OAAOA,KAAU,UAGfc,IAAoB,CAACd,MACvBa,EAASb,CAAK,KAAKA,MAAU,IAG3Be,IAAS,CAACf,MAEf,OAAOA,KAAU,YACjB,OAAOA,EAAM,QAAS,YACtB,OAAOA,EAAM,UAAW,cACxB,OAAOA,EAAM,eAAgB,cAC7B,OAAOA,EAAM,eAAgB,cAC7B,OAAOA,EAAM,YAAY,QAAS,YAClC,gBAAgB,KAAKA,EAAM,YAAY,IAAI,KAC3C,gBAAgB,KAAKA,EAAM,OAAO,WAAW,CAAC,GAIzCgB,IAAa,CAAChB,MAChBA,aAAiB,UAGfiB,IAAS,CAACC,MAAwB;AACvC,MAAA;AACA,WAAO,KAAKA,CAAG;AAAA,UACL;AAEV,WAAO,OAAO,KAAKA,CAAG,EAAE,SAAS,QAAQ;AAAA,EAC7C;AACJ,GAEaC,KAAiB,CAACC,MAAwC;AACnE,QAAMC,IAAe,CAAA,GAEfC,IAAS,CAACC,GAAavB,MAAe;AACrC,IAAAqB,EAAA,KAAK,GAAG,mBAAmBE,CAAG,CAAC,IAAI,mBAAmB,OAAOvB,CAAK,CAAC,CAAC,EAAE;AAAA,EAAA,GAGvEwB,IAAU,CAACD,GAAavB,MAAe;AACrC,IAAAY,EAAUZ,CAAK,MACX,MAAM,QAAQA,CAAK,IACnBA,EAAM,QAAQ,CAAKyB,MAAA;AACf,MAAAD,EAAQD,GAAKE,CAAC;AAAA,IAAA,CACjB,IACM,OAAOzB,KAAU,WACjB,OAAA,QAAQA,CAAK,EAAE,QAAQ,CAAC,CAAC0B,GAAGD,CAAC,MAAM;AACtC,MAAAD,EAAQ,GAAGD,CAAG,IAAIG,CAAC,KAAKD,CAAC;AAAA,IAAA,CAC5B,IAEDH,EAAOC,GAAKvB,CAAK;AAAA,EAEzB;AAOA,SAJG,OAAA,QAAQoB,CAAM,EAAE,QAAQ,CAAC,CAACG,GAAKvB,CAAK,MAAM;AAC7C,IAAAwB,EAAQD,GAAKvB,CAAK;AAAA,EAAA,CACrB,GAEGqB,EAAG,SAAS,IACL,IAAIA,EAAG,KAAK,GAAG,CAAC,KAGpB;AACX,GAEMM,KAAS,CAACC,GAAuBC,MAAuC;AACpE,QAAAC,IAAUF,EAAO,eAAe,WAEhCG,IAAOF,EAAQ,IAChB,QAAQ,iBAAiBD,EAAO,OAAO,EACvC,QAAQ,YAAY,CAACI,GAAmBC,MAAkB;;AACvD,YAAI/B,IAAA2B,EAAQ,SAAR,QAAA3B,EAAc,eAAe+B,KACtBH,EAAQ,OAAOD,EAAQ,KAAKI,CAAK,CAAC,CAAC,IAEvCD;AAAA,EAAA,CACV,GAECE,IAAM,GAAGN,EAAO,IAAI,GAAGG,CAAI;AACjC,SAAIF,EAAQ,QACD,GAAGK,CAAG,GAAGf,GAAeU,EAAQ,KAAK,CAAC,KAE1CK;AACX,GAEaC,KAAc,CAACN,MAAqD;AAC7E,MAAIA,EAAQ,UAAU;AACZ,UAAAO,IAAW,IAAI,YAEfZ,IAAU,CAACD,GAAavB,MAAe;AACzC,MAAIa,EAASb,CAAK,KAAKe,EAAOf,CAAK,IACtBoC,EAAA,OAAOb,GAAKvB,CAAK,IAE1BoC,EAAS,OAAOb,GAAK,KAAK,UAAUvB,CAAK,CAAC;AAAA,IAC9C;AAGJ,kBAAO,QAAQ6B,EAAQ,QAAQ,EAC1B,OAAO,CAAC,CAACQ,GAAGrC,CAAK,MAAMY,EAAUZ,CAAK,CAAC,EACvC,QAAQ,CAAC,CAACuB,GAAKvB,CAAK,MAAM;AACnB,MAAA,MAAM,QAAQA,CAAK,IACnBA,EAAM,QAAQ,CAAAyB,MAAKD,EAAQD,GAAKE,CAAC,CAAC,IAElCD,EAAQD,GAAKvB,CAAK;AAAA,IACtB,CACH,GAEEoC;AAAA,EACX;AAEJ,GAIavC,IAAU,OAAUgC,GAA4BS,MACrD,OAAOA,KAAa,aACZA,EAAyBT,CAAO,IAErCS,GAGEC,KAAa,OAAOX,GAAuBC,MAAiD;AACrG,QAAMW,IAAQ,MAAM3C,EAAQgC,GAASD,EAAO,KAAK,GAC3Ca,IAAW,MAAM5C,EAAQgC,GAASD,EAAO,QAAQ,GACjDc,IAAW,MAAM7C,EAAQgC,GAASD,EAAO,QAAQ,GACjDe,IAAoB,MAAM9C,EAAQgC,GAASD,EAAO,OAAO,GAEzDgB,IAAU,OAAO,QAAQ;AAAA,IAC3B,QAAQ;AAAA,IACR,GAAGD;AAAA,IACH,GAAGd,EAAQ;AAAA,EACd,CAAA,EACI,OAAO,CAAC,CAACQ,GAAGrC,CAAK,MAAMY,EAAUZ,CAAK,CAAC,EACvC,OAAO,CAAC4C,GAAS,CAACrB,GAAKvB,CAAK,OAAO;AAAA,IAChC,GAAG4C;AAAAA,IACH,CAACrB,CAAG,GAAG,OAAOvB,CAAK;AAAA,EAAA,IACnB,CAA4B,CAAA;AAMpC,MAJIc,EAAkB0B,CAAK,MACfI,EAAA,gBAAmB,UAAUJ,CAAK,KAG1C1B,EAAkB2B,CAAQ,KAAK3B,EAAkB4B,CAAQ,GAAG;AAC5D,UAAMG,IAAc5B,EAAO,GAAGwB,CAAQ,IAAIC,CAAQ,EAAE;AAC5C,IAAAE,EAAA,gBAAmB,SAASC,CAAW;AAAA,EACnD;AAEA,SAAIhB,EAAQ,SACJA,EAAQ,YACAe,EAAA,cAAc,IAAIf,EAAQ,YAC3Bd,EAAOc,EAAQ,IAAI,IAC1Be,EAAQ,cAAc,IAAIf,EAAQ,KAAK,QAAQ,6BACxChB,EAASgB,EAAQ,IAAI,IAC5Be,EAAQ,cAAc,IAAI,eAClB5B,EAAWa,EAAQ,IAAI,MAC/Be,EAAQ,cAAc,IAAI,sBAI3B,IAAI,QAAQA,CAAO;AAC9B,GAEaE,KAAiB,CAACjB,MAAoC;;AAC3D,MAAAA,EAAQ,SAAS;AACjB,YAAI3B,IAAA2B,EAAQ,cAAR,QAAA3B,EAAmB,SAAS,WACrB,KAAK,UAAU2B,EAAQ,IAAI,IAC3BhB,EAASgB,EAAQ,IAAI,KAAKd,EAAOc,EAAQ,IAAI,KAAKb,EAAWa,EAAQ,IAAI,IACzEA,EAAQ,OAER,KAAK,UAAUA,EAAQ,IAAI;AAI9C,GAEakB,KAAc,OACvBnB,GACAC,GACAK,GACAc,GACAZ,GACAQ,GACAvC,MACoB;AACd,QAAA4C,IAAa,IAAI,mBAEjBnE,IAAuB;AAAA,IACzB,SAAA8D;AAAA,IACA,MAAMI,KAAQZ;AAAA,IACd,QAAQP,EAAQ;AAAA,IAChB,QAAQoB,EAAW;AAAA,EAAA;AAGvB,SAAIrB,EAAO,qBACP9C,EAAQ,cAAc8C,EAAO,cAGxBvB,EAAA,MAAM4C,EAAW,MAAA,CAAO,GAE1B,MAAM,MAAMf,GAAKpD,CAAO;AACnC,GAEaoE,KAAoB,CAACnE,GAAoBoE,MAAgD;AAClG,MAAIA,GAAgB;AAChB,UAAMC,IAAUrE,EAAS,QAAQ,IAAIoE,CAAc;AAC/C,QAAAtC,EAASuC,CAAO;AACT,aAAAA;AAAA,EAEf;AAEJ,GAEaC,KAAkB,OAAOtE,MAAqC;AACnE,MAAAA,EAAS,WAAW;AAChB,QAAA;AACA,YAAMuE,IAAcvE,EAAS,QAAQ,IAAI,cAAc;AACvD,UAAIuE;AAGA,eAFkB,CAAC,oBAAoB,0BAA0B,EACxC,KAAK,CAAAC,MAAQD,EAAY,cAAc,WAAWC,CAAI,CAAC,IAErE,MAAMxE,EAAS,SAEf,MAAMA,EAAS;aAGzB2B,GAAO;AACZ,cAAQ,MAAMA,CAAK;AAAA,IACvB;AAGR,GAEa8C,KAAkB,CAAC3B,GAA4B4B,MAA4B;AAY9E,QAAA/C,IAXiC;AAAA,IACnC,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,GAAGmB,EAAQ;AAAA,EAAA,EAGM4B,EAAO,MAAM;AAClC,MAAI/C;AACA,UAAM,IAAI7B,EAASgD,GAAS4B,GAAQ/C,CAAK;AAGzC,MAAA,CAAC+C,EAAO,IAAI;AACN,UAAAC,IAAcD,EAAO,UAAU,WAC/BE,IAAkBF,EAAO,cAAc,WACvCG,KAAa,MAAM;AACjB,UAAA;AACA,eAAO,KAAK,UAAUH,EAAO,MAAM,MAAM,CAAC;AAAA,cAClC;AACD;AAAA,MACX;AAAA,IAAA;AAGJ,UAAM,IAAI5E;AAAA,MAASgD;AAAA,MAAS4B;AAAA,MACxB,0BAA0BC,CAAW,kBAAkBC,CAAe,WAAWC,CAAS;AAAA,IAAA;AAAA,EAElG;AACJ,GASa9E,IAAU,CAAI8C,GAAuBC,MACvC,IAAI3C,EAAkB,OAAOW,GAASC,GAAQO,MAAa;AAC1D,MAAA;AACM,UAAA6B,IAAMP,GAAOC,GAAQC,CAAO,GAC5BO,IAAWD,GAAYN,CAAO,GAC9BmB,IAAOF,GAAejB,CAAO,GAC7Be,IAAU,MAAML,GAAWX,GAAQC,CAAO;AAE5C,QAAA,CAACxB,EAAS,aAAa;AACjB,YAAAtB,IAAW,MAAMgE,GAAYnB,GAAQC,GAASK,GAAKc,GAAMZ,GAAUQ,GAASvC,CAAQ,GACpFwD,IAAe,MAAMR,GAAgBtE,CAAQ,GAC7CoE,IAAiBD,GAAkBnE,GAAU8C,EAAQ,cAAc,GAEnE4B,IAAoB;AAAA,QACtB,KAAAvB;AAAA,QACA,IAAInD,EAAS;AAAA,QACb,QAAQA,EAAS;AAAA,QACjB,YAAYA,EAAS;AAAA,QACrB,MAAMoE,KAAkBU;AAAA,MAAA;AAG5B,MAAAL,GAAgB3B,GAAS4B,CAAM,GAE/B5D,EAAQ4D,EAAO,IAAI;AAAA,IACvB;AAAA,WACK/C,GAAO;AACZ,IAAAZ,EAAOY,CAAK;AAAA,EAChB;AAAA,CACH;AClTE,MAAMoD,EAAgB;AAAA;AAAA;AAAA;AAAA;AAAA,EAMzB,OAAc,aAAwD;AAClE,WAAOC,EAAUpD,GAAS;AAAA,MACtB,QAAQ;AAAA,MACR,KAAK;AAAA,IAAA,CACR;AAAA,EACL;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,OAAc,cAAc;AAAA,IAChC,aAAAqD;AAAA,EAAA,GAG6C;AACrC,WAAOD,EAAUpD,GAAS;AAAA,MACtB,QAAQ;AAAA,MACR,KAAK;AAAA,MACL,MAAMqD;AAAA,MACN,WAAW;AAAA,IAAA,CACd;AAAA,EACL;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,OAAc,UAAqC;AAC/C,WAAOD,EAAUpD,GAAS;AAAA,MACtB,QAAQ;AAAA,MACR,KAAK;AAAA,IAAA,CACR;AAAA,EACL;AAEJ;;AC3CO,MAAMsD,GAAsD;AAAA,EAI/D,YAAYC,GAAyB;AAFrC,IAAA9E,EAAA,MAAA+E,GAAA;AAGI,IAAAvE,EAAA,MAAKuE,GAAQD;AAAA,EACjB;AAAA,EAEA,MAAM,aAAkE;AACpE,WAAO,MAAME,EAAoBnE,EAAA,MAAKkE,IAAOL,EAAgB,YAAY;AAAA,EAC7E;AAAA,EAEA,MAAM,UAA+C;AACjD,WAAO,MAAMM,EAAoBnE,EAAA,MAAKkE,IAAOL,EAAgB,SAAS;AAAA,EAC1E;AAAA,EAEA,MAAM,cAAchF,GAAyF;AACzG,WAAO,MAAMsF,EAAoBnE,EAAA,MAAKkE,IAAOL,EAAgB,cAAc;AAAA,MACvE,aAAahF;AAAA,IAChB,CAAA,CAAC;AAAA,EACN;AACJ;AAnBIqF,IAAA;;ACRG,MAAME,WAA8BC,EAAkB;AAAA,EAGzD,YAAYJ,GAAyB;AACjC,UAAMA,CAAI;AAHd,IAAA9E,EAAA,MAAAmF,GAAA;AAIS,IAAA3E,EAAA,MAAA2E,GAAoB,IAAIN,GAAsB,IAAI;AAAA,EAC3D;AAAA,EAEA,MAAM,aAAa;AACR,WAAAhE,EAAA,MAAKsE,GAAkB;EAClC;AAAA,EAEA,MAAM,UAAU;AACL,WAAAtE,EAAA,MAAKsE,GAAkB;EAClC;AAAA,EAEA,MAAM,cAAcC,GAAYvC,GAAewC,GAAgBC,GAAc;AAElE,WAAAzE,EAAA,MAAKsE,GAAkB,cAAc;AAAA,MACxC,WAAWC;AAAA,MACX,WAAWvC;AAAA,MACX,YAAYwC;AAAA,MACZ,YAAYC;AAAA,IAAA,CACf;AAAA,EAEL;AACJ;AAzBIH,IAAA;ACJJ,MAAMI,KAAa;AAAA,EAEf,MAAM;AAAA,EACN,MAAM;AAAA,EACN,MAAM;AAAA,EACN,UAAU;AAAA,EAEV,WAAW;AAAA,IACP,OAAO;AAAA,IACP,MAAM;AAAA,IACN,aAAa;AAAA,IACb,aAAa;AAAA,IACb,cAAc;AAAA,IAEd,aAAa;AAAA,MACT,OAAO;AAAA,MACP,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,IACV;AAAA,IAEA,aAAa;AAAA,MACT,OAAO;AAAA,MACP,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,IACV;AAAA,EACJ;AAAA,EAEA,WAAW;AAAA,IACP,MAAM;AAAA,IACN,OAAO;AAAA,IACP,aAAa;AAAA,IACb,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,SAAS;AAAA,EACb;AAAA,EAEA,MAAO;AAAA,IACH,MAAM;AAAA,IACN,OAAO;AAAA,IACP,aAAa;AAAA,EACjB;AAAA,EAEA,MAAO;AAAA,IACH,SAAS;AAAA,IACT,OAAO;AAAA,IACP,MAAM;AAAA,IACN,OAAO;AAAA,IAEP,MAAM;AAAA,MACF,OAAO;AAAA,MACP,MAAM;AAAA,IACV;AAAA,EACJ;AAEJ,GAGaC,IAAiBD,ICzDxBE,KAAe,wBAEfC,KAAsB;AAAA,EACxB,MAAM;AAAA,EACN,OAAOF,EAAe,KAAK;AAAA,EAC3B,MAAMA,EAAe,KAAK;AAAA,EAC1B,MAAM;AAAA,IACF,OAAOA,EAAe,KAAK;AAAA,EAC/B;AACJ,GAEMG,KAAgC;AAAA,EAClC,MAAM;AAAA,EACN,MAAM;AAAA,EACN,OAAOH,EAAe,KAAK;AAAA,EAC3B,MAAM;AAAA,EACN,QAAQ;AAAA,EACR,MAAM;AAAA,IACF,OAAOA,EAAe,KAAK;AAAA,IAC3B,MAAMA,EAAe,KAAK;AAAA,EAC9B;AAAA,EACA,YAAY;AAAA,IACR;AAAA,MACI,OAAO;AAAA,MACP,OAAOC;AAAA,IACX;AAAA,EACJ;AACJ,GAEMG,KAAsB;AAAA,EACxB,MAAM;AAAA,EACN,OAAOJ,EAAe,KAAK;AAAA,EAC3B,MAAMA,EAAe,KAAK;AAAA,EAC1B,MAAM;AAAA,IACF,iBAAiBA,EAAe,KAAK;AAAA,EACzC;AACJ,GAEMK,KAA8B;AAAA,EAChC,MAAM;AAAA,EACN,OAAOL,EAAe,KAAK,KAAK;AAAA,EAChC,MAAMA,EAAe,KAAK,KAAK;AAAA,EAC/B,MAAM;AAAA,IACF,OAAOA,EAAe;AAAA,IACtB,MAAMA,EAAe;AAAA,IACrB,YAAYA,EAAe,UAAU;AAAA,IACrC,OAAO,CAACA,EAAe,KAAK,KAAK;AAAA,EACrC;AACJ,GAEaM,KAAY,CAACJ,IAAMC,IAAgBE,IAAUD,EAAI,GC7CxDG,IAAiBP,EAAe,UAAU,OAE1CQ,KAAoC;AAAA,EACtC,MAAM;AAAA,EACN,OAAOR,EAAe,UAAU;AAAA,EAChC,MAAM;AAAA,EACN,IAAI,MAAM,OAAO,iCAAwB;AAC7C,GAGMS,KAA+B;AAAA,EACjC,MAAM;AAAA,EACN,OAAOF;AAAA,EACP,MAAMP,EAAe,UAAU;AAAA,EAC/B,IAAI,MAAM,OAAO,iCAAwB;AAAA,EACzC,MAAM;AAAA,IACF,YAAYA,EAAe,UAAU;AAAA,EACzC;AACJ,GAKMU,KAA+C;AAAA,EACjD;AAAA,IACI,MAAM;AAAA,IACN,OAAOV,EAAe,UAAU,YAAY;AAAA,IAC5C,MAAMA,EAAe,UAAU,YAAY;AAAA,IAC3C,IAAI,MAAM,OAAO,+BAAoC;AAAA,IACrD,QAAQ;AAAA,IACR,MAAM;AAAA,MACF,OAAO;AAAA,MACP,UAAU;AAAA,MACV,MAAM;AAAA,IACV;AAAA,IACA,YAAY;AAAA,MACR;AAAA,QACR,OAAO;AAAA,QACK,OAAOO;AAAA,MACX;AAAA,IACJ;AAAA,EACJ;AAAA,EACA;AAAA,IACI,MAAM;AAAA,IACN,OAAOP,EAAe,UAAU,YAAY;AAAA,IAC5C,MAAMA,EAAe,UAAU,YAAY;AAAA,IAC3C,IAAI,MAAM,OAAO,gCAAsC;AAAA,IACvD,QAAQ;AAAA,IACR,MAAM;AAAA,MACF,OAAO;AAAA,MACP,UAAU;AAAA,MACV,MAAM;AAAA,IACV;AAAA,IACA,YAAY;AAAA,MACR;AAAA,QACR,OAAO;AAAA,QACK,OAAOO;AAAA,MACX;AAAA,IACJ;AAAA,EACJ;AACJ,GAEMI,KAAmD,CAAA,GAE5CL,IAAY,CAACE,IAASC,IAAW,GAAGC,IAAgB,GAAGC,EAAgB;;;;;;AC/DvE,IAAAC,IAAN,cAA6BC,EAAW;AAAA,EAAxC,cAAA;AAAA,UAAA,GAAA,SAAA,GAIM,KAAA,SAAA;AAAA,EAAA;AAAA,EAWD,aAAaC,GAA8BC,GAA0B;AACpE,SAAA,cAAc,IAAI,YAAY,kBAAkB;AAAA,MACjD,QAAQ;AAAA,QACJ,OAAOD;AAAA,QACP,KAAKC,EAAO;AAAA,MAChB;AAAA,IACH,CAAA,CAAC;AAAA,EACN;AAAA,EAEA,SAAS;;AAEC,UAAAD,KAAWxF,IAAA,KAAK,UAAL,gBAAAA,EAAY,KAEvB0F,KAAUC,IAAA,KAAK,UAAL,gBAAAA,EAAY,QAAQ,IAAI,CAACC,MAC9BC;AAAA,oCACiBD,EAAE,GAAG;AAAA,4BACbA,EAAE,KAAK;AAAA,2BACRA,EAAE,IAAI;AAAA;AAAA,6BAEJ,MAAM,KAAK,aAAaJ,GAAUI,CAAC,CAAC;AAAA;AAAA;AAKlD,WAAAC;AAAA;AAAA;AAAA;AAAA;AAAA,mDAKmCC,IAAA,KAAK,UAAL,gBAAAA,EAAY,SAAS;AAAA;AAAA,0CAE9BC,IAAA,KAAK,UAAL,gBAAAA,EAAY,IAAI;AAAA;AAAA;AAAA,8BAG3BL,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMjC;AA4BJ;AAnFaJ,EA0DF,SAASU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAtDhBC,EAAA;AAAA,EADCC,EAAS,EAAE,MAAM,QAAQ;AAAA,GAHjBZ,EAIT,WAAA,UAAA,CAAA;AAQAW,EAAA;AAAA,EADCC,EAAS,EAAE,MAAM,QAAQ;AAAA,GAXjBZ,EAYT,WAAA,SAAA,CAAA;AAZSA,IAANW,EAAA;AAAA,EADNE,EAAc,kBAAkB;AAAA,GACpBb,CAAA;;;;;;ACDA,IAAAc,IAAN,cAA8Bb,EAAW;AAAA,EAAzC,cAAA;AAAA,UAAA,GAAA,SAAA,GAGa,KAAA,QAAA;AAAA,EAAA;AAAA,EAKhB,SAAS;;AAIL,QAFA,QAAQ,IAAI,iBAAgBvF,IAAA,KAAK,YAAL,gBAAAA,EAAc,MAAM,GAE5C,CAAC,KAAK;AAAgB,aAAAqG;AAE1B,QAAIC,KAAaX,IAAA,KAAK,YAAL,gBAAAA,EAAc,IAAI,CAACpB,MAEzBsB;AAAA;AAAA,sBAEGtB,EAAO,YAAY,aAAa,EAAE,IAAIA,EAAO,UAAU,YAAY,EAAE;AAAA,sCACrDA,EAAO,IAAI;AAAA,0BACvBA,EAAO,UAAU;AAAA;AAAA;AAO5B,WAAAsB;AAAA;AAAA,sBAEO,KAAK,KAAK;AAAA;AAAA,sBAEVS,CAAU;AAAA;AAAA;AAAA;AAAA,EAI5B;AAoCJ;AAvEaF,EAqCF,SAASJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAlChBC,EAAA;AAAA,EADCC,EAAS,EAAC,MAAM,QAAO;AAAA,GAFfE,EAGT,WAAA,SAAA,CAAA;AAGAH,EAAA;AAAA,EADCC,EAAS,EAAC,MAAM,OAAM;AAAA,GALdE,EAMT,WAAA,WAAA,CAAA;AANSA,IAANH,EAAA;AAAA,EADNE,EAAc,oBAAoB;AAAA,GACtBC,CAAA;ACGb,MAAMG,KAAiC;AAAA,EACnC;AAAA,IACI,MAAM;AAAA,IACN,OAAO;AAAA,IACP,MAAM;AAAA,IACN,IAAI,MAAM,OAAO,iCAAkC;AAAA,EAEvD;AACJ,GAEaC,KAA8B,CAACvC,GAAOwC,MAAsB;AACrE,UAAQ,IAAItB,CAAS,GAGHsB,EAAA;AAAA,IACd;AAAA,MACI,GAAGF;AAAA,MACH,GAAGG;AAAAA,MACH,GAAGvB;AAAAA,IACP;AAAA,EAAA;AACR;"}