{"version":3,"file":"workspace.context-nF2oOeUu.js","sources":["../../../assets/src/workspace/workspace.context.ts"],"sourcesContent":["import { UmbArrayState, UmbBooleanState, UmbObjectState } from \"@umbraco-cms/backoffice/observable-api\";\r\nimport { UmbContextToken } from \"@umbraco-cms/backoffice/context-api\";\r\n\r\nimport { uSyncActionRepository } from \"..\";\r\nimport { UmbControllerHost } from \"@umbraco-cms/backoffice/controller-api\";\r\nimport { UmbBaseController } from \"@umbraco-cms/backoffice/class-api\";\r\nimport { ActionInfo, SyncActionGroup } from \"../api\";\r\n\r\nimport { OpenAPI } from \"../api\";\r\nimport { UMB_AUTH_CONTEXT } from '@umbraco-cms/backoffice/auth'\r\n\r\n/**\r\n * @exports \r\n * @class uSyncWorkspaceActionContext\r\n * @description context for getting and seting up actions.\r\n */\r\nexport class uSyncWorkspaceContext extends UmbBaseController {\r\n\r\n    #repository: uSyncActionRepository;\r\n\r\n    constructor(host:UmbControllerHost) {\r\n        super(host);\r\n\r\n        this.provideContext(USYNC_CORE_CONTEXT_TOKEN, this);\r\n\r\n        this.#repository = new uSyncActionRepository(this);\r\n\r\n        this.consumeContext(UMB_AUTH_CONTEXT, (_auth) => {\r\n            OpenAPI.TOKEN = () => _auth.getLatestToken();\r\n            OpenAPI.WITH_CREDENTIALS = true;\r\n            this.#loaded.setValue(true);\r\n        });\r\n    }\r\n\r\n    #loaded = new UmbBooleanState(false);\r\n    public readonly loaded = this.#loaded.asObservable();\r\n\r\n    #actions = new UmbArrayState<SyncActionGroup>([], (x) => x.key);\r\n    public readonly actions = this.#actions.asObservable();\r\n\r\n    #workingActions = new UmbArrayState<ActionInfo>([], (x) => x.actionName);\r\n    public readonly currentAction = this.#workingActions.asObservable();\r\n\r\n    #working = new UmbBooleanState(false);\r\n    public readonly working = this.#working.asObservable();\r\n\r\n    #completed = new UmbBooleanState(false);\r\n    public readonly completed = this.#completed.asObservable();\r\n\r\n    async getActions() {\r\n\r\n        const { data } = await this.#repository.getActions();\r\n\r\n        if (data) {           \r\n            this.#actions.setValue(data);\r\n        }\r\n    }\r\n\r\n    async getTime() {\r\n        const {data} = await this.#repository.getTime();\r\n\r\n        if (data) {\r\n            console.log(data);\r\n        }\r\n    }\r\n\r\n\r\n    public async performAction(group: string, key: string) {\r\n\r\n        console.log(\"Perform Action:\", group, key);\r\n\r\n        this.#working.setValue(true);\r\n        this.#completed.setValue(false);\r\n\r\n        var complete = false; \r\n        var id = '';\r\n        var step: number = 0;\r\n\r\n        do {\r\n\r\n            const {data} = await this.#repository.performAction(id, group, key, step);\r\n\r\n            if (data) {\r\n\r\n                step++;\r\n\r\n                console.log(data);\r\n\r\n                \r\n                this.#workingActions.setValue(data.actionInfo);\r\n\r\n\r\n                id = data.requestId;\r\n                complete = data.completed;\r\n\r\n            }\r\n            else {\r\n                complete = true;\r\n            }\r\n\r\n        } while (!complete)\r\n        \r\n\r\n        this.#completed.setValue(true);\r\n        this.#working.setValue(false);\r\n\r\n    }\r\n}\r\n\r\nexport default uSyncWorkspaceContext;\r\n\r\nexport const USYNC_CORE_CONTEXT_TOKEN = \r\n    new UmbContextToken<uSyncWorkspaceContext>(uSyncWorkspaceContext.name);"],"names":["uSyncWorkspaceContext","UmbBaseController","host","__privateAdd","_repository","_loaded","_actions","_workingActions","_working","_completed","__privateSet","UmbBooleanState","__privateGet","UmbArrayState","x","USYNC_CORE_CONTEXT_TOKEN","uSyncActionRepository","UMB_AUTH_CONTEXT","_auth","OpenAPI","data","group","key","complete","id","step","UmbContextToken"],"mappings":";;;;;;;;;;;;;;;;;AAgBO,MAAMA,UAA8BC,EAAkB;AAAA,EAIzD,YAAYC,GAAwB;AAChC,UAAMA,CAAI;AAHd,IAAAC,EAAA,MAAAC,GAAA;AAgBA,IAAAD,EAAA,MAAAE,GAAA;AAGA,IAAAF,EAAA,MAAAG,GAAA;AAGA,IAAAH,EAAA,MAAAI,GAAA;AAGA,IAAAJ,EAAA,MAAAK,GAAA;AAGA,IAAAL,EAAA,MAAAM,GAAA;AAZU,IAAAC,EAAA,MAAAL,GAAA,IAAIM,EAAgB,EAAK,IACnB,KAAA,SAASC,EAAA,MAAKP,GAAQ,aAAa,GAEnDK,EAAA,MAAAJ,GAAW,IAAIO,EAA+B,CAAA,GAAI,CAACC,MAAMA,EAAE,GAAG,IAC9C,KAAA,UAAUF,EAAA,MAAKN,GAAS,aAAa,GAErDI,EAAA,MAAAH,GAAkB,IAAIM,EAA0B,CAAA,GAAI,CAACC,MAAMA,EAAE,UAAU,IACvD,KAAA,gBAAgBF,EAAA,MAAKL,GAAgB,aAAa,GAEvDG,EAAA,MAAAF,GAAA,IAAIG,EAAgB,EAAK,IACpB,KAAA,UAAUC,EAAA,MAAKJ,GAAS,aAAa,GAExCE,EAAA,MAAAD,GAAA,IAAIE,EAAgB,EAAK,IACtB,KAAA,YAAYC,EAAA,MAAKH,GAAW,aAAa,GAxBhD,KAAA,eAAeM,GAA0B,IAAI,GAE7CL,EAAA,MAAAN,GAAc,IAAIY,EAAsB,IAAI,IAE5C,KAAA,eAAeC,GAAkB,CAACC,MAAU;AACrC,MAAAC,EAAA,QAAQ,MAAMD,EAAM,eAAe,GAC3CC,EAAQ,mBAAmB,IACtBP,EAAA,MAAAP,GAAQ,SAAS,EAAI;AAAA,IAAA,CAC7B;AAAA,EACL;AAAA,EAiBA,MAAM,aAAa;AAEf,UAAM,EAAE,MAAAe,EAAK,IAAI,MAAMR,EAAA,MAAKR,GAAY,WAAW;AAEnD,IAAIgB,KACKR,EAAA,MAAAN,GAAS,SAASc,CAAI;AAAA,EAEnC;AAAA,EAEA,MAAM,UAAU;AACZ,UAAM,EAAC,MAAAA,EAAI,IAAI,MAAMR,EAAA,MAAKR,GAAY,QAAQ;AAE9C,IAAIgB,KACA,QAAQ,IAAIA,CAAI;AAAA,EAExB;AAAA,EAGA,MAAa,cAAcC,GAAeC,GAAa;AAE3C,YAAA,IAAI,mBAAmBD,GAAOC,CAAG,GAEpCV,EAAA,MAAAJ,GAAS,SAAS,EAAI,GACtBI,EAAA,MAAAH,GAAW,SAAS,EAAK;AAE9B,QAAIc,IAAW,IACXC,IAAK,IACLC,IAAe;AAEhB,OAAA;AAEO,YAAA,EAAC,MAAAL,EAAI,IAAI,MAAMR,EAAA,MAAKR,GAAY,cAAcoB,GAAIH,GAAOC,GAAKG,CAAI;AAExE,MAAIL,KAEAK,KAEA,QAAQ,IAAIL,CAAI,GAGXR,EAAA,MAAAL,GAAgB,SAASa,EAAK,UAAU,GAG7CI,IAAKJ,EAAK,WACVG,IAAWH,EAAK,aAILG,IAAA;AAAA,aAGV,CAACA;AAGL,IAAAX,EAAA,MAAAH,GAAW,SAAS,EAAI,GACxBG,EAAA,MAAAJ,GAAS,SAAS,EAAK;AAAA,EAEhC;AACJ;AAzFIJ,IAAA,eAgBAC,IAAA,eAGAC,IAAA,eAGAC,IAAA,eAGAC,IAAA,eAGAC,IAAA;AAiEG,MAAMM,IACT,IAAIW,EAAuC1B,EAAsB,IAAI;"}